Content-Type: multipart/mixed; boundary="==BOUNDARY=="
MIME-Version: 1.0

--==BOUNDARY==
MIME-Version: 1.0
Content-Type: text/text/x-shellscript; charset="us-ascii"

#!/bin/bash
# Specify the cluster that the container instance should register into
cluster=<your-ecs-cluster>

# Write the cluster configuration variable to the ecs.config file
# (add any other configuration variables here also)
echo ECS_CLUSTER=$cluster >> /etc/ecs/ecs.config

# Install some mundane tools
yum install -y aws-cli jq git vim ncdu htop sysstat

# add logrotate configuration - comment this if you have custom logrotate configuration
cat >> /etc/logrotate.d/docker <<- EOL
    /var/lib/docker/containers/*/*.log {
      rotate 7
      daily
      compress
      size=1M
      missingok
      delaycompress
      copytruncate
    }
EOL

#tag instances properly
instance_id=$(curl -XGET http://169.254.169.254/latest/meta-data/instance-id)
aws ec2 create-tags --resources $instance_id --tags="Key=Name,Value=your-instance-name" --region ap-southeast-1
aws ec2 create-tags --resources $instance_id --tags="Key=Team,Value=your-keyvalue" --region ap-southeast-1
aws ec2 create-tags --resources $instance_id --tags="Key=Monitoring,Value=On" --region ap-southeast-1

--==BOUNDARY==
MIME-Version: 1.0
Content-Type: text/text/upstart-job; charset="us-ascii"

#upstart-job
description "Amazon EC2 Container Service (start task on instance boot)"
author "Amazon Web Services"
start on started ecs

script
    exec 2>>/var/log/ecs/ecs-start-task.log
    set -x
    until curl -s http://localhost:51678/v1/metadata
    do
        sleep 1
    done

    # Grab the container instance ARN and AWS region from instance metadata
    instance_arn=$(curl -s http://localhost:51678/v1/metadata | jq -r '. | .ContainerInstanceArn' | awk -F/ '{print $NF}' )
    cluster=$(curl -s http://localhost:51678/v1/metadata | jq -r '. | .Cluster' | awk -F/ '{print $NF}' )
    region=$(curl -s http://localhost:51678/v1/metadata | jq -r '. | .ContainerInstanceArn' | awk -F: '{print $4}')

    # Specify the task definition to run at launch
    task_definition1=prometheus_cadvisor:1
    task_definition2=prometheus_node_exporter:1

    # Run the AWS CLI start-task command to start prometheus and cadvisor containers
    aws ecs start-task --cluster $cluster --task-definition $task_definition1 --container-instances $instance_arn --started-by $instance_arn --region $region
    aws ecs start-task --cluster $cluster --task-definition $task_definition2 --container-instances $instance_arn --started-by $instance_arn --region $region
end script
--==BOUNDARY==--
